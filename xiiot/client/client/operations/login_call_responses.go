// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/doubret/terraform-provider-xiiot/xiiot/client/models"
)

// LoginCallReader is a Reader for the LoginCall structure.
type LoginCallReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LoginCallReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewLoginCallOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewLoginCallBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewLoginCallUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewLoginCallDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewLoginCallOK creates a LoginCallOK with default headers values
func NewLoginCallOK() *LoginCallOK {
	return &LoginCallOK{}
}

/*LoginCallOK handles this case with default header values.

Ok
*/
type LoginCallOK struct {
	Payload *models.LoginResponse
}

func (o *LoginCallOK) Error() string {
	return fmt.Sprintf("[POST /login][%d] loginCallOK  %+v", 200, o.Payload)
}

func (o *LoginCallOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LoginResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoginCallBadRequest creates a LoginCallBadRequest with default headers values
func NewLoginCallBadRequest() *LoginCallBadRequest {
	return &LoginCallBadRequest{}
}

/*LoginCallBadRequest handles this case with default header values.

Bad request
*/
type LoginCallBadRequest struct {
}

func (o *LoginCallBadRequest) Error() string {
	return fmt.Sprintf("[POST /login][%d] loginCallBadRequest ", 400)
}

func (o *LoginCallBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLoginCallUnauthorized creates a LoginCallUnauthorized with default headers values
func NewLoginCallUnauthorized() *LoginCallUnauthorized {
	return &LoginCallUnauthorized{}
}

/*LoginCallUnauthorized handles this case with default header values.

Login failed
*/
type LoginCallUnauthorized struct {
}

func (o *LoginCallUnauthorized) Error() string {
	return fmt.Sprintf("[POST /login][%d] loginCallUnauthorized ", 401)
}

func (o *LoginCallUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLoginCallDefault creates a LoginCallDefault with default headers values
func NewLoginCallDefault(code int) *LoginCallDefault {
	return &LoginCallDefault{
		_statusCode: code,
	}
}

/*LoginCallDefault handles this case with default header values.

Unexpected error
*/
type LoginCallDefault struct {
	_statusCode int
}

// Code gets the status code for the login call default response
func (o *LoginCallDefault) Code() int {
	return o._statusCode
}

func (o *LoginCallDefault) Error() string {
	return fmt.Sprintf("[POST /login][%d] LoginCall default ", o._statusCode)
}

func (o *LoginCallDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
