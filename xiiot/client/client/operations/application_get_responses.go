// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/doubret/terraform-provider-xiiot/xiiot/client/models"
)

// ApplicationGetReader is a Reader for the ApplicationGet structure.
type ApplicationGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ApplicationGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewApplicationGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewApplicationGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewApplicationGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewApplicationGetOK creates a ApplicationGetOK with default headers values
func NewApplicationGetOK() *ApplicationGetOK {
	return &ApplicationGetOK{}
}

/*ApplicationGetOK handles this case with default header values.

Ok
*/
type ApplicationGetOK struct {
	Payload *models.Application
}

func (o *ApplicationGetOK) Error() string {
	return fmt.Sprintf("[GET /application/{id}][%d] applicationGetOK  %+v", 200, o.Payload)
}

func (o *ApplicationGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Application)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewApplicationGetBadRequest creates a ApplicationGetBadRequest with default headers values
func NewApplicationGetBadRequest() *ApplicationGetBadRequest {
	return &ApplicationGetBadRequest{}
}

/*ApplicationGetBadRequest handles this case with default header values.

Bad request
*/
type ApplicationGetBadRequest struct {
}

func (o *ApplicationGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /application/{id}][%d] applicationGetBadRequest ", 400)
}

func (o *ApplicationGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewApplicationGetDefault creates a ApplicationGetDefault with default headers values
func NewApplicationGetDefault(code int) *ApplicationGetDefault {
	return &ApplicationGetDefault{
		_statusCode: code,
	}
}

/*ApplicationGetDefault handles this case with default header values.

Unexpected error
*/
type ApplicationGetDefault struct {
	_statusCode int
}

// Code gets the status code for the application get default response
func (o *ApplicationGetDefault) Code() int {
	return o._statusCode
}

func (o *ApplicationGetDefault) Error() string {
	return fmt.Sprintf("[GET /application/{id}][%d] ApplicationGet default ", o._statusCode)
}

func (o *ApplicationGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
