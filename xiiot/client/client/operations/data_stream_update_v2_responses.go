// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/doubret/terraform-provider-xiiot/xiiot/client/models"
)

// DataStreamUpdateV2Reader is a Reader for the DataStreamUpdateV2 structure.
type DataStreamUpdateV2Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DataStreamUpdateV2Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDataStreamUpdateV2OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDataStreamUpdateV2BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewDataStreamUpdateV2Default(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDataStreamUpdateV2OK creates a DataStreamUpdateV2OK with default headers values
func NewDataStreamUpdateV2OK() *DataStreamUpdateV2OK {
	return &DataStreamUpdateV2OK{}
}

/*DataStreamUpdateV2OK handles this case with default header values.

Ok
*/
type DataStreamUpdateV2OK struct {
	Payload *models.UpdateDocumentResponse
}

func (o *DataStreamUpdateV2OK) Error() string {
	return fmt.Sprintf("[PUT /datastreams/{id}][%d] dataStreamUpdateV2OK  %+v", 200, o.Payload)
}

func (o *DataStreamUpdateV2OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UpdateDocumentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDataStreamUpdateV2BadRequest creates a DataStreamUpdateV2BadRequest with default headers values
func NewDataStreamUpdateV2BadRequest() *DataStreamUpdateV2BadRequest {
	return &DataStreamUpdateV2BadRequest{}
}

/*DataStreamUpdateV2BadRequest handles this case with default header values.

Bad request
*/
type DataStreamUpdateV2BadRequest struct {
}

func (o *DataStreamUpdateV2BadRequest) Error() string {
	return fmt.Sprintf("[PUT /datastreams/{id}][%d] dataStreamUpdateV2BadRequest ", 400)
}

func (o *DataStreamUpdateV2BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDataStreamUpdateV2Default creates a DataStreamUpdateV2Default with default headers values
func NewDataStreamUpdateV2Default(code int) *DataStreamUpdateV2Default {
	return &DataStreamUpdateV2Default{
		_statusCode: code,
	}
}

/*DataStreamUpdateV2Default handles this case with default header values.

Unexpected error
*/
type DataStreamUpdateV2Default struct {
	_statusCode int
}

// Code gets the status code for the data stream update v2 default response
func (o *DataStreamUpdateV2Default) Code() int {
	return o._statusCode
}

func (o *DataStreamUpdateV2Default) Error() string {
	return fmt.Sprintf("[PUT /datastreams/{id}][%d] DataStreamUpdateV2 default ", o._statusCode)
}

func (o *DataStreamUpdateV2Default) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
