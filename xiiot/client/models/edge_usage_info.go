// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// EdgeUsageInfo EdgeUsageInfo is the DB object and object model for edgeinfo
//
// EdgeUsageInfo has information like the memory, storage and CPU usage
// swagger:model EdgeUsageInfo
type EdgeUsageInfo struct {

	// CPUUsage
	CPUUsage string `json:"CPUUsage,omitempty"`

	// EdgeBuildNum
	EdgeBuildNum string `json:"EdgeBuildNum,omitempty"`

	// edge ID
	// Required: true
	EdgeID *string `json:"edgeId"`

	// EdgeVersion
	EdgeVersion string `json:"EdgeVersion,omitempty"`

	// GPUInfo
	GPUinfo string `json:"GPUInfo,omitempty"`

	// GPUUsage
	GPUUsage string `json:"GPUUsage,omitempty"`

	// ID
	ID string `json:"id,omitempty"`

	// KubeVersion
	KubeVersion string `json:"KubeVersion,omitempty"`

	// MemoryFreeKB
	MemoryFreeKB string `json:"MemoryFreeKB,omitempty"`

	// NumCpu
	NumCPU string `json:"NumCPU,omitempty"`

	// OSVersion
	OSVersion string `json:"OSVersion,omitempty"`

	// StorageFreeKB
	StorageFreeKB string `json:"StorageFreeKB,omitempty"`

	// TotalMemoryKB
	TotalMemoryKB string `json:"TotalMemoryKB,omitempty"`

	// TotalStorageKB
	TotalStorageKB string `json:"TotalStorageKB,omitempty"`
}

// Validate validates this edge usage info
func (m *EdgeUsageInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEdgeID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *EdgeUsageInfo) validateEdgeID(formats strfmt.Registry) error {

	if err := validate.Required("edgeId", "body", m.EdgeID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *EdgeUsageInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EdgeUsageInfo) UnmarshalBinary(b []byte) error {
	var res EdgeUsageInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
