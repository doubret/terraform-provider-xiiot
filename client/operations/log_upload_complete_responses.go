// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// LogUploadCompleteReader is a Reader for the LogUploadComplete structure.
type LogUploadCompleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LogUploadCompleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 400:
		result := NewLogUploadCompleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewLogUploadCompleteDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewLogUploadCompleteBadRequest creates a LogUploadCompleteBadRequest with default headers values
func NewLogUploadCompleteBadRequest() *LogUploadCompleteBadRequest {
	return &LogUploadCompleteBadRequest{}
}

/*LogUploadCompleteBadRequest handles this case with default header values.

Bad request
*/
type LogUploadCompleteBadRequest struct {
}

func (o *LogUploadCompleteBadRequest) Error() string {
	return fmt.Sprintf("[POST /logs/uploadComplete][%d] logUploadCompleteBadRequest ", 400)
}

func (o *LogUploadCompleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLogUploadCompleteDefault creates a LogUploadCompleteDefault with default headers values
func NewLogUploadCompleteDefault(code int) *LogUploadCompleteDefault {
	return &LogUploadCompleteDefault{
		_statusCode: code,
	}
}

/*LogUploadCompleteDefault handles this case with default header values.

Unexpected error
*/
type LogUploadCompleteDefault struct {
	_statusCode int
}

// Code gets the status code for the log upload complete default response
func (o *LogUploadCompleteDefault) Code() int {
	return o._statusCode
}

func (o *LogUploadCompleteDefault) Error() string {
	return fmt.Sprintf("[POST /logs/uploadComplete][%d] LogUploadComplete default ", o._statusCode)
}

func (o *LogUploadCompleteDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
